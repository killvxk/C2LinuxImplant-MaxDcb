name: TestsGcc13

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  buildAndTest:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: gcc:13

    steps:
    - uses: actions/checkout@v4

    - name: Install system dep
      run: |
        apt update -y
        apt install -y cmake
        apt install -y python3-pip
      shell: bash
  
    # Update references
    - name: Git Sumbodule Update
      run: |
        git config --global --add safe.directory /__w/C2LinuxImplant/C2LinuxImplant
        git submodule update --init
        
    - name: Get Conan
      run: |
        pip3 install conan --break-system-packages
      shell: bash

    - name: Create default profile
      run: conan profile detect
      
    - name: Configure CMake
      run: cmake -B /__w/C2LinuxImplant/C2LinuxImplant/build -DWITH_TESTS=ON -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=/__w/C2LinuxImplant/C2LinuxImplant/conan_provider.cmake

    - name: Build
      run: cmake --build /__w/C2LinuxImplant/C2LinuxImplant/build --config ${{env.BUILD_TYPE}} -j 18

    - name: Run unit tests
      run: ctest --test-dir build -C Release
      
    - name: Configure CMake like the release
      run: cmake -B /__w/C2LinuxImplant/C2LinuxImplant/buildRelease -DWITH_TESTS=OFF -DCMAKE_PROJECT_TOP_LEVEL_INCLUDES=/__w/C2LinuxImplant/C2LinuxImplant/conan_provider.cmake

    - name: Build like the release
      run: cmake --build /__w/C2LinuxImplant/C2LinuxImplant/buildRelease -j 18


